{"version":3,"sources":["components/Header.js","App.js","features/counter/counterSlice.js","app/store.js","index.js"],"names":["Header","className","href","App","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"+LAuBeA,MArBf,WACC,OACC,yBAAKC,UAAU,WAEd,yBAAKA,UAAU,WACd,yBAAKA,UAAU,SACd,0CAGD,6BACC,uBAAGC,KAAK,KAAR,YACA,uBAAGA,KAAK,KAAR,WACA,uBAAGA,KAAK,KAAR,aACA,uBAAGA,KAAK,KAAR,gBCDUC,MAVf,WACC,OACC,yBAAKF,UAAU,OAEd,kBAAC,EAAD,Q,OCNUG,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAAAC,GAKTA,EAAMH,OAAS,GAEjBI,UAAW,SAAAD,GACTA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,Y,EAK+BX,EAAaY,QAiBzDZ,G,EAjBAM,U,EAAWE,U,EAAWC,kBAiBtBT,EAAf,SCtCea,cAAe,CAC5BC,QAAS,CACPC,QAASC,K,aCGbC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,CAAUC,MAAOA,GAChB,kBAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.849a2cf1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<div className=\"HeaderC\">\r\n\r\n\t\t\t<div className=\"Content\">\r\n\t\t\t\t<div className=\"Brand\">\r\n\t\t\t\t\t<h2>Rocketzon</h2>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<a href=\"#\">About us</a>\r\n\t\t\t\t\t<a href=\"#\">Rockets</a>\r\n\t\t\t\t\t<a href=\"#\">Customize</a>\r\n\t\t\t\t\t<a href=\"#\">Checkout</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Header from './components/Header.js';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\r\n\t\t\t<Header />\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport './style/main.scss';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}